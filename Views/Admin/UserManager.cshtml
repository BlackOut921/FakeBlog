@using FakeBlog.Models.Account
@model IEnumerable<FakeBlogUserModel>

@{
	ViewData["Title"] = "User Manager";
}

<h1 class="display-1">@ViewData["Title"]</h1>

<form class="mb-3 w-75 mx-auto">
	<input list="userDatalist" placeholder="Search username" class="form-control" />
	<datalist id="userDatalist">
		<option value="" selected></option>
	</datalist>
</form>

<a href="#">Create new user</a>

@if(Model != null)
{
	@if(Model.Count() > 0)
	{
		<table class="table table-striped table-hover">
			<thead>
				<tr>
					<th>Username</th>
					<th>Action</th>
				</tr>
			</thead>
			<tbody>
				@foreach (FakeBlogUserModel user in Model)
				{
					<tr>
						<td>@user.UserName</td>
						<td>
							@if(@user.UserName != User.Identity?.Name)
							{
								<a asp-controller="Admin" asp-action="EditUser" asp-route-username="@user.UserName">Edit</a>
							}
						</td>
					</tr>
				}
			</tbody>
		</table>
	}
	else
	{
		<p class="text-danger text-center">No users found</p>
	}
}

<div class="bg-light bg-opacity-75 p-2 text-danger border border-danger">
	<p>
		User manager:
		<ul>
			<li>Delete accounts</li>
			<li>Reset passwords</li>
			<li>Change roles ("normaluser | admin | otherroles")</li>
		</ul>
	</p>
</div>

<script type="text/javascript">
	const userDatalist = document.getElementById("userDatalist");
	const userList = @Html.Raw(Json.Serialize(Model));
	userList.forEach(i => {
		const o = document.createElement("option");
		o.setAttribute("value", i.userName);
		userDatalist.appendChild(o);
		//console.log(i.userName);
	});
</script>